"use strict";(self.webpackChunkitmoji_client=self.webpackChunkitmoji_client||[]).push([[782],{"./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/components/Checkbox/Checkbox.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S:()=>Checkbox});var jsx_runtime=__webpack_require__("./node_modules/.pnpm/next@15.2.4_@babel+core@7.26.0_babel-plugin-react-compiler@19.0.0-beta-decd7b8-20250118_react_unhtcb7bi6mmzfme42cuc4j34i/node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/.pnpm/next@15.2.4_@babel+core@7.26.0_babel-plugin-react-compiler@19.0.0-beta-decd7b8-20250118_react_unhtcb7bi6mmzfme42cuc4j34i/node_modules/next/dist/compiled/react/index.js"),use_id=__webpack_require__("./node_modules/.pnpm/@mantine+hooks@7.17.3_react@19.0.0/node_modules/@mantine/hooks/esm/use-id/use-id.mjs"),get_size=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/utils/get-size/get-size.mjs"),create_vars_resolver=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/styles-api/create-vars-resolver/create-vars-resolver.mjs"),parse_theme_color=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs"),get_theme_color=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs"),get_contrast_color=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs"),get_auto_contrast_value=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs"),use_props=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/MantineProvider/use-props/use-props.mjs"),use_styles=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/styles-api/use-styles/use-styles.mjs"),extract_style_props=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/Box/style-props/extract-style-props/extract-style-props.mjs"),Box=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/Box/Box.mjs"),factory=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/factory/factory.mjs"),Input=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/components/Input/Input.mjs"),classes={root:"m_5f75b09e",body:"m_5f6e695e",labelWrapper:"m_d3ea56bb",label:"m_8ee546b8",description:"m_328f68c0",error:"m_8e8a99cc"};const InlineInputClasses=classes,InlineInput=(0,react.forwardRef)((({__staticSelector,__stylesApiProps,className,classNames,styles,unstyled,children,label,description,id,disabled,error,size,labelPosition="left",bodyElement="div",labelElement="label",variant,style,vars,mod,...others},ref)=>{const getStyles=(0,use_styles.I)({name:__staticSelector,props:__stylesApiProps,className,style,classes,classNames,styles,unstyled});return(0,jsx_runtime.jsx)(Box.a,{...getStyles("root"),ref,__vars:{"--label-fz":(0,get_size.ny)(size),"--label-lh":(0,get_size.YC)(size,"label-lh")},mod:[{"label-position":labelPosition},mod],variant,size,...others,children:(0,jsx_runtime.jsxs)(Box.a,{component:bodyElement,htmlFor:"label"===bodyElement?id:void 0,...getStyles("body"),children:[children,(0,jsx_runtime.jsxs)("div",{...getStyles("labelWrapper"),"data-disabled":disabled||void 0,children:[label&&(0,jsx_runtime.jsx)(Box.a,{component:labelElement,htmlFor:"label"===labelElement?id:void 0,...getStyles("label"),"data-disabled":disabled||void 0,children:label}),description&&(0,jsx_runtime.jsx)(Input.p.Description,{size,__inheritStyles:!1,...getStyles("description"),children:description}),error&&"boolean"!=typeof error&&(0,jsx_runtime.jsx)(Input.p.Error,{size,__inheritStyles:!1,...getStyles("error"),children:error})]})]})})}));InlineInput.displayName="@mantine/core/InlineInput";var use_uncontrolled=__webpack_require__("./node_modules/.pnpm/@mantine+hooks@7.17.3_react@19.0.0/node_modules/@mantine/hooks/esm/use-uncontrolled/use-uncontrolled.mjs"),UnstyledButton=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/components/UnstyledButton/UnstyledButton.mjs");const CheckboxGroupContext=(0,react.createContext)(null),CheckboxGroupProvider=CheckboxGroupContext.Provider,useCheckboxGroupContext=()=>(0,react.useContext)(CheckboxGroupContext);var create_optional_context=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/core/utils/create-optional-context/create-optional-context.mjs");const[CheckboxCardProvider,useCheckboxCardContext]=(0,create_optional_context.e)();var CheckboxCard_module_css_classes={card:"m_26775b0a"};const defaultProps={withBorder:!0},varsResolver=(0,create_vars_resolver.V)(((_,{radius})=>({card:{"--card-radius":(0,get_size.nJ)(radius)}}))),CheckboxCard=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("CheckboxCard",defaultProps,_props),{classNames,className,style,styles,unstyled,vars,checked,mod,withBorder,value,onClick,defaultChecked,onChange,...others}=props,getStyles=(0,use_styles.I)({name:"CheckboxCard",classes:CheckboxCard_module_css_classes,props,className,style,classNames,styles,unstyled,vars,varsResolver,rootSelector:"card"}),ctx=useCheckboxGroupContext(),_checked="boolean"==typeof checked?checked:ctx?ctx.value.includes(value||""):void 0,[_value,setValue]=(0,use_uncontrolled.Z)({value:_checked,defaultValue:defaultChecked,finalValue:!1,onChange});return(0,jsx_runtime.jsx)(CheckboxCardProvider,{value:{checked:_value},children:(0,jsx_runtime.jsx)(UnstyledButton.N,{ref,mod:[{"with-border":withBorder,checked:_value},mod],...getStyles("card"),...others,role:"checkbox","aria-checked":_value,onClick:event=>{onClick?.(event),ctx?.onChange(value||""),setValue(!_value)}})})}));CheckboxCard.displayName="@mantine/core/CheckboxCard",CheckboxCard.classes=CheckboxCard_module_css_classes;var InputWrapper_context=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/components/Input/InputWrapper.context.mjs");function InputsGroupFieldset({children,role}){const ctx=(0,InputWrapper_context.e)();return ctx?(0,jsx_runtime.jsx)("div",{role,"aria-labelledby":ctx.labelId,"aria-describedby":ctx.describedBy,children}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children})}const CheckboxGroup_defaultProps={},CheckboxGroup=(0,factory.P9)(((props,ref)=>{const{value,defaultValue,onChange,size,wrapperProps,children,readOnly,...others}=(0,use_props.Y)("CheckboxGroup",CheckboxGroup_defaultProps,props),[_value,setValue]=(0,use_uncontrolled.Z)({value,defaultValue,finalValue:[],onChange});return(0,jsx_runtime.jsx)(CheckboxGroupProvider,{value:{value:_value,onChange:event=>{const itemValue="string"==typeof event?event:event.currentTarget.value;!readOnly&&setValue(_value.includes(itemValue)?_value.filter((item=>item!==itemValue)):[..._value,itemValue])},size},children:(0,jsx_runtime.jsx)(Input.p.Wrapper,{size,ref,...wrapperProps,...others,labelElement:"div",__staticSelector:"CheckboxGroup",children:(0,jsx_runtime.jsx)(InputsGroupFieldset,{role:"group",children})})})}));CheckboxGroup.classes=Input.p.Wrapper.classes,CheckboxGroup.displayName="@mantine/core/CheckboxGroup";var CheckIcon=__webpack_require__("./node_modules/.pnpm/@mantine+core@7.17.3_@mantine+hooks@7.17.3_react@19.0.0__@types+react@19.0.8_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/@mantine/core/esm/components/Checkbox/CheckIcon.mjs"),CheckboxIndicator_module_css_classes={indicator:"m_5e5256ee",icon:"m_1b1c543a","indicator--outline":"m_76e20374"};const CheckboxIndicator_defaultProps={icon:CheckIcon.R},CheckboxIndicator_varsResolver=(0,create_vars_resolver.V)(((theme,{radius,color,size,iconColor,variant,autoContrast})=>{const parsedColor=(0,parse_theme_color.g)({color:color||theme.primaryColor,theme}),outlineColor=parsedColor.isThemeColor&&void 0===parsedColor.shade?`var(--mantine-color-${parsedColor.color}-outline)`:parsedColor.color;return{indicator:{"--checkbox-size":(0,get_size.YC)(size,"checkbox-size"),"--checkbox-radius":void 0===radius?void 0:(0,get_size.nJ)(radius),"--checkbox-color":"outline"===variant?outlineColor:(0,get_theme_color.r)(color,theme),"--checkbox-icon-color":iconColor?(0,get_theme_color.r)(iconColor,theme):(0,get_auto_contrast_value.v)(autoContrast,theme)?(0,get_contrast_color.w)({color,theme,autoContrast}):void 0}}})),CheckboxIndicator=(0,factory.P9)(((_props,ref)=>{const props=(0,use_props.Y)("CheckboxIndicator",CheckboxIndicator_defaultProps,_props),{classNames,className,style,styles,unstyled,vars,icon,indeterminate,radius,color,iconColor,autoContrast,checked,mod,variant,disabled,...others}=props,Icon=icon,getStyles=(0,use_styles.I)({name:"CheckboxIndicator",classes:CheckboxIndicator_module_css_classes,props,className,style,classNames,styles,unstyled,vars,varsResolver:CheckboxIndicator_varsResolver,rootSelector:"indicator"}),ctx=useCheckboxCardContext(),_checked="boolean"==typeof checked||"boolean"==typeof indeterminate?checked||indeterminate:ctx?.checked||!1;return(0,jsx_runtime.jsx)(Box.a,{ref,...getStyles("indicator",{variant}),variant,mod:[{checked:_checked,disabled},mod],...others,children:(0,jsx_runtime.jsx)(Icon,{indeterminate,...getStyles("icon")})})}));CheckboxIndicator.displayName="@mantine/core/CheckboxIndicator",CheckboxIndicator.classes=CheckboxIndicator_module_css_classes;var Checkbox_module_css_classes={root:"m_bf2d988c",inner:"m_26062bec",input:"m_26063560",icon:"m_bf295423","input--outline":"m_215c4542"};const Checkbox_defaultProps={labelPosition:"right",icon:CheckIcon.R},Checkbox_varsResolver=(0,create_vars_resolver.V)(((theme,{radius,color,size,iconColor,variant,autoContrast})=>{const parsedColor=(0,parse_theme_color.g)({color:color||theme.primaryColor,theme}),outlineColor=parsedColor.isThemeColor&&void 0===parsedColor.shade?`var(--mantine-color-${parsedColor.color}-outline)`:parsedColor.color;return{root:{"--checkbox-size":(0,get_size.YC)(size,"checkbox-size"),"--checkbox-radius":void 0===radius?void 0:(0,get_size.nJ)(radius),"--checkbox-color":"outline"===variant?outlineColor:(0,get_theme_color.r)(color,theme),"--checkbox-icon-color":iconColor?(0,get_theme_color.r)(iconColor,theme):(0,get_auto_contrast_value.v)(autoContrast,theme)?(0,get_contrast_color.w)({color,theme,autoContrast}):void 0}}})),Checkbox=(0,factory.P9)(((_props,forwardedRef)=>{const props=(0,use_props.Y)("Checkbox",Checkbox_defaultProps,_props),{classNames,className,style,styles,unstyled,vars,color,label,id,size,radius,wrapperProps,checked,labelPosition,description,error,disabled,variant,indeterminate,icon,rootRef,iconColor,onChange,autoContrast,mod,...others}=props,ctx=useCheckboxGroupContext(),_size=size||ctx?.size,Icon=icon,getStyles=(0,use_styles.I)({name:"Checkbox",props,classes:Checkbox_module_css_classes,className,style,classNames,styles,unstyled,vars,varsResolver:Checkbox_varsResolver}),{styleProps,rest}=(0,extract_style_props.j)(others),uuid=(0,use_id.B)(id),contextProps=ctx?{checked:ctx.value.includes(rest.value),onChange:event=>{ctx.onChange(event),onChange?.(event)}}:{},fallbackRef=(0,react.useRef)(null),ref=forwardedRef||fallbackRef;return(0,react.useEffect)((()=>{ref&&"current"in ref&&ref.current&&(ref.current.indeterminate=indeterminate||!1)}),[indeterminate,ref]),(0,jsx_runtime.jsx)(InlineInput,{...getStyles("root"),__staticSelector:"Checkbox",__stylesApiProps:props,id:uuid,size:_size,labelPosition,label,description,error,disabled,classNames,styles,unstyled,"data-checked":contextProps.checked||checked||void 0,variant,ref:rootRef,mod,...styleProps,...wrapperProps,children:(0,jsx_runtime.jsxs)(Box.a,{...getStyles("inner"),mod:{"data-label-position":labelPosition},children:[(0,jsx_runtime.jsx)(Box.a,{component:"input",id:uuid,ref,checked,disabled,mod:{error:!!error,indeterminate},...getStyles("input",{focusable:!0,variant}),onChange,...rest,...contextProps,type:"checkbox"}),(0,jsx_runtime.jsx)(Icon,{indeterminate,...getStyles("icon")})]})})}));Checkbox.classes={...Checkbox_module_css_classes,...InlineInputClasses},Checkbox.displayName="@mantine/core/Checkbox",Checkbox.Group=CheckboxGroup,Checkbox.Indicator=CheckboxIndicator,Checkbox.Card=CheckboxCard},"./node_modules/.pnpm/@mantine+form@7.17.3_react@19.0.0/node_modules/@mantine/form/esm/use-form.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{m:()=>useForm});var react=__webpack_require__("./node_modules/.pnpm/next@15.2.4_@babel+core@7.26.0_babel-plugin-react-compiler@19.0.0-beta-decd7b8-20250118_react_unhtcb7bi6mmzfme42cuc4j34i/node_modules/next/dist/compiled/react/index.js");function validateFormName(name){if(!/^[0-9a-zA-Z-]+$/.test(name))throw new Error(`[@mantine/use-form] Form name "${name}" is invalid, it should contain only letters, numbers and dashes`)}const useIsomorphicEffect="undefined"!=typeof window?react.useLayoutEffect:react.useEffect;function useFormEvent(eventKey,handler){useIsomorphicEffect((()=>{if(eventKey)return window.addEventListener(eventKey,handler),()=>window.removeEventListener(eventKey,handler)}),[eventKey])}function filterErrors(errors){return null===errors||"object"!=typeof errors?{}:Object.keys(errors).reduce(((acc,key)=>{const errorValue=errors[key];return null!=errorValue&&!1!==errorValue&&(acc[key]=errorValue),acc}),{})}function clearListState(field,state){if(null===state||"object"!=typeof state)return{};const clone={...state};return Object.keys(state).forEach((errorKey=>{errorKey.includes(`${String(field)}.`)&&delete clone[errorKey]})),clone}function getIndexFromKeyAfterPath(key,path){const split=key.substring(path.length+1).split(".")[0];return parseInt(split,10)}function changeErrorIndices(path,index,errors,change){if(void 0===index)return errors;const pathString=`${String(path)}`;let clearedErrors=errors;-1===change&&(clearedErrors=clearListState(`${pathString}.${index}`,clearedErrors));const cloned={...clearedErrors},changedKeys=new Set;return Object.entries(clearedErrors).filter((([key])=>{if(!key.startsWith(`${pathString}.`))return!1;const currIndex=getIndexFromKeyAfterPath(key,pathString);return!Number.isNaN(currIndex)&&currIndex>=index})).forEach((([key,value])=>{const currIndex=getIndexFromKeyAfterPath(key,pathString),newKey=key.replace(`${pathString}.${currIndex}`,`${pathString}.${currIndex+change}`);cloned[newKey]=value,changedKeys.add(newKey),changedKeys.has(key)||delete cloned[key]})),cloned}function getSplittedPath(path){return"string"!=typeof path?[]:path.split(".")}function getPath(path,values){const splittedPath=getSplittedPath(path);if(0===splittedPath.length||"object"!=typeof values||null===values)return;let value=values[splittedPath[0]];for(let i=1;i<splittedPath.length&&null!=value;i+=1)value=value[splittedPath[i]];return value}function set(obj,key,val){"object"==typeof val.value&&(val.value=klona(val.value)),val.enumerable&&!val.get&&!val.set&&val.configurable&&val.writable&&"__proto__"!==key?obj[key]=val.value:Object.defineProperty(obj,key,val)}function klona(x){if("object"!=typeof x)return x;var k,list,tmp,i=0,str=Object.prototype.toString.call(x);if("[object Object]"===str?tmp=Object.create(x.__proto__||null):"[object Array]"===str?tmp=Array(x.length):"[object Set]"===str?(tmp=new Set,x.forEach((function(val){tmp.add(klona(val))}))):"[object Map]"===str?(tmp=new Map,x.forEach((function(val,key){tmp.set(klona(key),klona(val))}))):"[object Date]"===str?tmp=new Date(+x):"[object RegExp]"===str?tmp=new RegExp(x.source,x.flags):"[object DataView]"===str?tmp=new x.constructor(klona(x.buffer)):"[object ArrayBuffer]"===str?tmp=x.slice(0):"Array]"===str.slice(-6)&&(tmp=new x.constructor(x)),tmp){for(list=Object.getOwnPropertySymbols(x);i<list.length;i++)set(tmp,list[i],Object.getOwnPropertyDescriptor(x,list[i]));for(i=0,list=Object.getOwnPropertyNames(x);i<list.length;i++)Object.hasOwnProperty.call(tmp,k=list[i])&&tmp[k]===x[k]||set(tmp,k,Object.getOwnPropertyDescriptor(x,k))}return tmp||x}function setPath(path,value,values){const splittedPath=getSplittedPath(path);if(0===splittedPath.length)return values;const cloned=klona(values);if(1===splittedPath.length)return cloned[splittedPath[0]]=value,cloned;let val=cloned[splittedPath[0]];for(let i=1;i<splittedPath.length-1;i+=1){if(void 0===val)return cloned;val=val[splittedPath[i]]}return val[splittedPath[splittedPath.length-1]]=value,cloned}function reorderPath(path,{from,to},values){const currentValue=getPath(path,values);if(!Array.isArray(currentValue))return values;const cloned=[...currentValue],item=currentValue[from];return cloned.splice(from,1),cloned.splice(to,0,item),setPath(path,cloned,values)}function insertPath(path,value,index,values){const currentValue=getPath(path,values);if(!Array.isArray(currentValue))return values;const cloned=[...currentValue];return cloned.splice("number"==typeof index?index:cloned.length,0,value),setPath(path,cloned,values)}function removePath(path,index,values){const currentValue=getPath(path,values);return Array.isArray(currentValue)?setPath(path,currentValue.filter(((_,itemIndex)=>itemIndex!==index)),values):values}function replacePath(path,item,index,values){const currentValue=getPath(path,values);if(!Array.isArray(currentValue))return values;if(currentValue.length<=index)return values;const cloned=[...currentValue];return cloned[index]=item,setPath(path,cloned,values)}function useFormList({$values,$errors,$status}){return{reorderListItem:(0,react.useCallback)(((path,payload)=>{$status.clearFieldDirty(path),$errors.setErrors((errs=>function reorderErrors(path,{from,to},errors){const oldKeyStart=`${path}.${from}`,newKeyStart=`${path}.${to}`,clone={...errors};return Object.keys(errors).every((key=>{let oldKey,newKey;if(key.startsWith(oldKeyStart)&&(oldKey=key,newKey=key.replace(oldKeyStart,newKeyStart)),key.startsWith(newKeyStart)&&(oldKey=key.replace(newKeyStart,oldKeyStart),newKey=key),oldKey&&newKey){const value1=clone[oldKey],value2=clone[newKey];return void 0===value2?delete clone[oldKey]:clone[oldKey]=value2,void 0===value1?delete clone[newKey]:clone[newKey]=value1,!1}return!0})),clone}(path,payload,errs))),$values.setValues({values:reorderPath(path,payload,$values.refValues.current),updateState:!0})}),[]),removeListItem:(0,react.useCallback)(((path,index)=>{$status.clearFieldDirty(path),$errors.setErrors((errs=>changeErrorIndices(path,index,errs,-1))),$values.setValues({values:removePath(path,index,$values.refValues.current),updateState:!0})}),[]),insertListItem:(0,react.useCallback)(((path,item,index)=>{$status.clearFieldDirty(path),$errors.setErrors((errs=>changeErrorIndices(path,index,errs,1))),$values.setValues({values:insertPath(path,item,index,$values.refValues.current),updateState:!0})}),[]),replaceListItem:(0,react.useCallback)(((path,index,item)=>{$status.clearFieldDirty(path),$values.setValues({values:replacePath(path,item,index,$values.refValues.current),updateState:!0})}),[])}}var fast_deep_equal=__webpack_require__("./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js"),fast_deep_equal_default=__webpack_require__.n(fast_deep_equal);function getStatus(status,path){const paths=Object.keys(status);if("string"==typeof path){const nestedPaths=paths.filter((statusPath=>statusPath.startsWith(`${path}.`)));return status[path]||nestedPaths.some((statusPath=>status[statusPath]))||!1}return paths.some((statusPath=>status[statusPath]))}function getDataPath(formName,fieldPath){return formName?`${formName}-${fieldPath.toString()}`:fieldPath.toString()}const formRootRule=Symbol("root-rule");function getValidationResults(errors){const filteredErrors=filterErrors(errors);return{hasErrors:Object.keys(filteredErrors).length>0,errors:filteredErrors}}function validateRulesRecord(rules,values,path="",errors={}){return"object"!=typeof rules||null===rules?errors:Object.keys(rules).reduce(((acc,ruleKey)=>{const rule=rules[ruleKey],rulePath=`${""===path?"":`${path}.`}${ruleKey}`,value=getPath(rulePath,values);let arrayValidation=!1;return"function"==typeof rule&&(acc[rulePath]=rule(value,values,rulePath)),"object"==typeof rule&&Array.isArray(value)&&(arrayValidation=!0,value.forEach(((_item,index)=>validateRulesRecord(rule,values,`${rulePath}.${index}`,acc))),formRootRule in rule&&(acc[rulePath]=rule[formRootRule](value,values,rulePath))),"object"==typeof rule&&"object"==typeof value&&null!==value&&(arrayValidation||validateRulesRecord(rule,values,rulePath,acc),formRootRule in rule&&(acc[rulePath]=rule[formRootRule](value,values,rulePath))),acc}),errors)}function validateValues(validate,values){return getValidationResults("function"==typeof validate?validate(values):validateRulesRecord(validate,values))}function validateFieldValue(path,rules,values){if("string"!=typeof path)return{hasError:!1,error:null};const results=validateValues(rules,values),pathInError=Object.keys(results.errors).find((errorKey=>path.split(".").every(((pathPart,i)=>pathPart===errorKey.split(".")[i]))));return{hasError:!!pathInError,error:pathInError?results.errors[pathInError]:null}}const FORM_INDEX="__MANTINE_FORM_INDEX__";function shouldValidateOnChange(path,validateInputOnChange){return!!validateInputOnChange&&("boolean"==typeof validateInputOnChange?validateInputOnChange:!!Array.isArray(validateInputOnChange)&&validateInputOnChange.includes(path.replace(/[.][0-9]+/g,`.${FORM_INDEX}`)))}function useForm({name,mode="controlled",initialValues,initialErrors={},initialDirty={},initialTouched={},clearInputErrorOnChange=!0,validateInputOnChange=!1,validateInputOnBlur=!1,onValuesChange,transformValues=values=>values,enhanceGetInputProps,validate:rules,onSubmitPreventDefault="always",touchTrigger="change"}={}){const $errors=function useFormErrors(initialErrors){const[errorsState,setErrorsState]=(0,react.useState)(filterErrors(initialErrors)),errorsRef=(0,react.useRef)(errorsState),setErrors=(0,react.useCallback)((errors=>{setErrorsState((current=>{const newErrors=filterErrors("function"==typeof errors?errors(current):errors);return errorsRef.current=newErrors,newErrors}))}),[]),clearErrors=(0,react.useCallback)((()=>setErrors({})),[]),clearFieldError=(0,react.useCallback)((path=>{void 0!==errorsRef.current[path]&&setErrors((current=>{const errors={...current};return delete errors[path],errors}))}),[errorsState]),setFieldError=(0,react.useCallback)(((path,error)=>{null==error||!1===error?clearFieldError(path):errorsRef.current[path]!==error&&setErrors((current=>({...current,[path]:error})))}),[errorsState]);return{errorsState,setErrors,clearErrors,setFieldError,clearFieldError}}(initialErrors),$values=function useFormValues({initialValues,onValuesChange,mode}){const initialized=(0,react.useRef)(!1),[stateValues,setStateValues]=(0,react.useState)(initialValues||{}),refValues=(0,react.useRef)(stateValues),valuesSnapshot=(0,react.useRef)(stateValues),setValues=(0,react.useCallback)((({values,subscribers,updateState=!0,mergeWithPreviousValues=!0})=>{const previousValues=refValues.current,resolvedValues=values instanceof Function?values(refValues.current):values,updatedValues=mergeWithPreviousValues?{...previousValues,...resolvedValues}:resolvedValues;refValues.current=updatedValues,updateState&&setStateValues(updatedValues),onValuesChange?.(updatedValues,previousValues),subscribers?.filter(Boolean).forEach((subscriber=>subscriber({updatedValues,previousValues})))}),[onValuesChange]),setFieldValue=(0,react.useCallback)((payload=>{const currentValue=getPath(payload.path,refValues.current),updatedValue=payload.value instanceof Function?payload.value(currentValue):payload.value;if(currentValue!==updatedValue){const previousValues=refValues.current,updatedValues=setPath(payload.path,updatedValue,refValues.current);setValues({values:updatedValues,updateState:payload.updateState}),payload.subscribers?.filter(Boolean).forEach((subscriber=>subscriber({path:payload.path,updatedValues,previousValues})))}}),[setValues]),setValuesSnapshot=(0,react.useCallback)((payload=>{valuesSnapshot.current=payload}),[]),initialize=(0,react.useCallback)(((values,onInitialize)=>{initialized.current||(initialized.current=!0,setValues({values,updateState:"controlled"===mode}),setValuesSnapshot(values),onInitialize())}),[setValues]),resetValues=(0,react.useCallback)((()=>{setValues({values:valuesSnapshot.current,updateState:!0,mergeWithPreviousValues:!1})}),[setValues]),getValues=(0,react.useCallback)((()=>refValues.current),[]),getValuesSnapshot=(0,react.useCallback)((()=>valuesSnapshot.current),[]);return{initialized,stateValues,refValues,valuesSnapshot,setValues,setFieldValue,resetValues,setValuesSnapshot,initialize,getValues,getValuesSnapshot}}({initialValues,onValuesChange,mode}),$status=function useFormStatus({initialDirty,initialTouched,mode,$values}){const[touchedState,setTouchedState]=(0,react.useState)(initialTouched),[dirtyState,setDirtyState]=(0,react.useState)(initialDirty),touchedRef=(0,react.useRef)(initialTouched),dirtyRef=(0,react.useRef)(initialDirty),setTouched=(0,react.useCallback)((values=>{const resolvedValues="function"==typeof values?values(touchedRef.current):values;touchedRef.current=resolvedValues,"controlled"===mode&&setTouchedState(resolvedValues)}),[]),setDirty=(0,react.useCallback)(((values,forceUpdate=!1)=>{const resolvedValues="function"==typeof values?values(dirtyRef.current):values;dirtyRef.current=resolvedValues,("controlled"===mode||forceUpdate)&&setDirtyState(resolvedValues)}),[]),resetTouched=(0,react.useCallback)((()=>setTouched({})),[]),resetDirty=(0,react.useCallback)((values=>{const newSnapshot=values?{...$values.refValues.current,...values}:$values.refValues.current;$values.setValuesSnapshot(newSnapshot),setDirty({})}),[]),setFieldTouched=(0,react.useCallback)(((path,touched)=>{setTouched((currentTouched=>getStatus(currentTouched,path)===touched?currentTouched:{...currentTouched,[path]:touched}))}),[]),setFieldDirty=(0,react.useCallback)(((path,dirty,forceUpdate)=>{setDirty((currentDirty=>getStatus(currentDirty,path)===dirty?currentDirty:{...currentDirty,[path]:dirty}),forceUpdate)}),[]),setCalculatedFieldDirty=(0,react.useCallback)(((path,value)=>{const currentDirty=getStatus(dirtyRef.current,path),dirty=!fast_deep_equal_default()(getPath(path,$values.getValuesSnapshot()),value),clearedState=clearListState(path,dirtyRef.current);clearedState[path]=dirty,setDirty(clearedState,currentDirty!==dirty)}),[]),isTouched=(0,react.useCallback)((path=>getStatus(touchedRef.current,path)),[]),clearFieldDirty=(0,react.useCallback)((path=>setDirty((current=>{if("string"!=typeof path)return current;const result=clearListState(path,current);return delete result[path],fast_deep_equal_default()(result,current)?current:result}))),[]),isDirty=(0,react.useCallback)((path=>{if(path){const overriddenValue=getPath(path,dirtyRef.current);if("boolean"==typeof overriddenValue)return overriddenValue;const sliceOfValues=getPath(path,$values.refValues.current),sliceOfInitialValues=getPath(path,$values.valuesSnapshot.current);return!fast_deep_equal_default()(sliceOfValues,sliceOfInitialValues)}return Object.keys(dirtyRef.current).length>0?getStatus(dirtyRef.current):!fast_deep_equal_default()($values.refValues.current,$values.valuesSnapshot.current)}),[]),getDirty=(0,react.useCallback)((()=>dirtyRef.current),[]),getTouched=(0,react.useCallback)((()=>touchedRef.current),[]);return{touchedState,dirtyState,touchedRef,dirtyRef,setTouched,setDirty,resetDirty,resetTouched,isTouched,setFieldTouched,setFieldDirty,setTouchedState,setDirtyState,clearFieldDirty,isDirty,getDirty,getTouched,setCalculatedFieldDirty}}({initialDirty,initialTouched,$values,mode}),$list=useFormList({$values,$errors,$status}),$watch=function useFormWatch({$status}){const subscribers=(0,react.useRef)({}),watch=(0,react.useCallback)(((path,callback)=>{(0,react.useEffect)((()=>(subscribers.current[path]=subscribers.current[path]||[],subscribers.current[path].push(callback),()=>{subscribers.current[path]=subscribers.current[path].filter((cb=>cb!==callback))})),[callback])}),[]),getFieldSubscribers=(0,react.useCallback)((path=>subscribers.current[path]?subscribers.current[path].map((callback=>input=>callback({previousValue:getPath(path,input.previousValues),value:getPath(path,input.updatedValues),touched:$status.isTouched(path),dirty:$status.isDirty(path)}))):[]),[]);return{subscribers,watch,getFieldSubscribers}}({$status}),[formKey,setFormKey]=(0,react.useState)(0),[fieldKeys,setFieldKeys]=(0,react.useState)({}),[submitting,setSubmitting]=(0,react.useState)(!1),reset=(0,react.useCallback)((()=>{$values.resetValues(),$errors.clearErrors(),$status.resetDirty(),$status.resetTouched(),"uncontrolled"===mode&&setFormKey((key2=>key2+1))}),[]),handleValuesChanges=(0,react.useCallback)((previousValues=>{clearInputErrorOnChange&&$errors.clearErrors(),"uncontrolled"===mode&&setFormKey((key2=>key2+1)),Object.keys($watch.subscribers.current).forEach((path=>{getPath(path,$values.refValues.current)!==getPath(path,previousValues)&&$watch.getFieldSubscribers(path).forEach((cb=>cb({previousValues,updatedValues:$values.refValues.current})))}))}),[clearInputErrorOnChange]),initialize=(0,react.useCallback)((values=>{const previousValues=$values.refValues.current;$values.initialize(values,(()=>"uncontrolled"===mode&&setFormKey((key2=>key2+1)))),handleValuesChanges(previousValues)}),[handleValuesChanges]),setFieldValue=(0,react.useCallback)(((path,value,options)=>{const shouldValidate=shouldValidateOnChange(path,validateInputOnChange),resolvedValue=value instanceof Function?value(getPath(path,$values.refValues.current)):value;$status.setCalculatedFieldDirty(path,resolvedValue),"change"===touchTrigger&&$status.setFieldTouched(path,!0),!shouldValidate&&clearInputErrorOnChange&&$errors.clearFieldError(path),$values.setFieldValue({path,value,updateState:"controlled"===mode,subscribers:[...$watch.getFieldSubscribers(path),shouldValidate?payload=>{const validationResults=validateFieldValue(path,rules,payload.updatedValues);validationResults.hasError?$errors.setFieldError(path,validationResults.error):$errors.clearFieldError(path)}:null,!1!==options?.forceUpdate&&"controlled"!==mode?()=>setFieldKeys((keys=>({...keys,[path]:(keys[path]||0)+1}))):null]})}),[onValuesChange,rules]),setValues=(0,react.useCallback)((values=>{const previousValues=$values.refValues.current;$values.setValues({values,updateState:"controlled"===mode}),handleValuesChanges(previousValues)}),[onValuesChange,handleValuesChanges]),validate=(0,react.useCallback)((()=>{const results=validateValues(rules,$values.refValues.current);return $errors.setErrors(results.errors),results}),[rules]),validateField=(0,react.useCallback)((path=>{const results=validateFieldValue(path,rules,$values.refValues.current);return results.hasError?$errors.setFieldError(path,results.error):$errors.clearFieldError(path),results}),[rules]),onReset=(0,react.useCallback)((event=>{event.preventDefault(),reset()}),[]),isValid=(0,react.useCallback)((path=>path?!validateFieldValue(path,rules,$values.refValues.current).hasError:!validateValues(rules,$values.refValues.current).hasErrors),[rules]),getInputNode=(0,react.useCallback)((path=>document.querySelector(`[data-path="${getDataPath(name,path)}"]`)),[]),form={watch:$watch.watch,initialized:$values.initialized.current,values:$values.stateValues,getValues:$values.getValues,setInitialValues:$values.setValuesSnapshot,initialize,setValues,setFieldValue,submitting,setSubmitting,errors:$errors.errorsState,setErrors:$errors.setErrors,setFieldError:$errors.setFieldError,clearFieldError:$errors.clearFieldError,clearErrors:$errors.clearErrors,resetDirty:$status.resetDirty,setTouched:$status.setTouched,setDirty:$status.setDirty,isTouched:$status.isTouched,resetTouched:$status.resetTouched,isDirty:$status.isDirty,getTouched:$status.getTouched,getDirty:$status.getDirty,reorderListItem:$list.reorderListItem,insertListItem:$list.insertListItem,removeListItem:$list.removeListItem,replaceListItem:$list.replaceListItem,reset,validate,validateField,getInputProps:(path,{type="input",withError=!0,withFocus=!0,...otherOptions}={})=>{const payload={onChange:function getInputOnChange(setValue){return val=>{if(val)if("function"==typeof val)setValue(val);else if("object"==typeof val&&"nativeEvent"in val){const{currentTarget}=val;currentTarget instanceof HTMLInputElement?"checkbox"===currentTarget.type?setValue(currentTarget.checked):setValue(currentTarget.value):(currentTarget instanceof HTMLTextAreaElement||currentTarget instanceof HTMLSelectElement)&&setValue(currentTarget.value)}else setValue(val);else setValue(val)}}((value=>setFieldValue(path,value,{forceUpdate:!1}))),"data-path":getDataPath(name,path)};return withError&&(payload.error=$errors.errorsState[path]),"checkbox"===type?payload["controlled"===mode?"checked":"defaultChecked"]=getPath(path,$values.refValues.current):payload["controlled"===mode?"value":"defaultValue"]=getPath(path,$values.refValues.current),withFocus&&(payload.onFocus=()=>$status.setFieldTouched(path,!0),payload.onBlur=()=>{if(shouldValidateOnChange(path,validateInputOnBlur)){const validationResults=validateFieldValue(path,rules,$values.refValues.current);validationResults.hasError?$errors.setFieldError(path,validationResults.error):$errors.clearFieldError(path)}}),Object.assign(payload,enhanceGetInputProps?.({inputProps:payload,field:path,options:{type,withError,withFocus,...otherOptions},form}))},onSubmit:(handleSubmit,handleValidationFailure)=>event=>{"always"===onSubmitPreventDefault&&event?.preventDefault();const results=validate();if(results.hasErrors)"validation-failed"===onSubmitPreventDefault&&event?.preventDefault(),handleValidationFailure?.(results.errors,$values.refValues.current,event);else{const submitResult=handleSubmit?.(transformValues($values.refValues.current),event);submitResult instanceof Promise&&(setSubmitting(!0),submitResult.finally((()=>setSubmitting(!1))))}},onReset,isValid,getTransformedValues:input=>transformValues(input||$values.refValues.current),key:path=>`${formKey}-${path}-${fieldKeys[path]||0}`,getInputNode};return function useFormActions(name,form){name&&validateFormName(name),useFormEvent(`mantine-form:${name}:set-field-value`,(event=>form.setFieldValue(event.detail.path,event.detail.value))),useFormEvent(`mantine-form:${name}:set-values`,(event=>form.setValues(event.detail))),useFormEvent(`mantine-form:${name}:set-initial-values`,(event=>form.setInitialValues(event.detail))),useFormEvent(`mantine-form:${name}:set-errors`,(event=>form.setErrors(event.detail))),useFormEvent(`mantine-form:${name}:set-field-error`,(event=>form.setFieldError(event.detail.path,event.detail.error))),useFormEvent(`mantine-form:${name}:clear-field-error`,(event=>form.clearFieldError(event.detail))),useFormEvent(`mantine-form:${name}:clear-errors`,form.clearErrors),useFormEvent(`mantine-form:${name}:reset`,form.reset),useFormEvent(`mantine-form:${name}:validate`,form.validate),useFormEvent(`mantine-form:${name}:validate-field`,(event=>form.validateField(event.detail))),useFormEvent(`mantine-form:${name}:reorder-list-item`,(event=>form.reorderListItem(event.detail.path,event.detail.payload))),useFormEvent(`mantine-form:${name}:remove-list-item`,(event=>form.removeListItem(event.detail.path,event.detail.index))),useFormEvent(`mantine-form:${name}:insert-list-item`,(event=>form.insertListItem(event.detail.path,event.detail.item,event.detail.index))),useFormEvent(`mantine-form:${name}:set-dirty`,(event=>form.setDirty(event.detail))),useFormEvent(`mantine-form:${name}:set-touched`,(event=>form.setTouched(event.detail))),useFormEvent(`mantine-form:${name}:reset-dirty`,(event=>form.resetDirty(event.detail))),useFormEvent(`mantine-form:${name}:reset-touched`,form.resetTouched)}(name,form),form}},"./node_modules/.pnpm/fast-deep-equal@3.1.3/node_modules/fast-deep-equal/index.js":module=>{module.exports=function equal(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){if(a.constructor!==b.constructor)return!1;var length,i,keys;if(Array.isArray(a)){if((length=a.length)!=b.length)return!1;for(i=length;0!=i--;)if(!equal(a[i],b[i]))return!1;return!0}if(a.constructor===RegExp)return a.source===b.source&&a.flags===b.flags;if(a.valueOf!==Object.prototype.valueOf)return a.valueOf()===b.valueOf();if(a.toString!==Object.prototype.toString)return a.toString()===b.toString();if((length=(keys=Object.keys(a)).length)!==Object.keys(b).length)return!1;for(i=length;0!=i--;)if(!Object.prototype.hasOwnProperty.call(b,keys[i]))return!1;for(i=length;0!=i--;){var key=keys[i];if(!equal(a[key],b[key]))return!1}return!0}return a!=a&&b!=b}}}]);